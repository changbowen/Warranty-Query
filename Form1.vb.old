Imports System.Windows.Forms
Imports System.Net

Public Class WarrantyQuery
    Dim SiteAddress As New Dictionary(Of String, String) From
        {{"Lenovo_CN", "http://think.lenovo.com.cn/service/warranty/repairDeploy.html"},
         {"Lenovo_US", "http://support.lenovo.com/us/en/warrantylookup"},
         {"Dell_US", "http://www.dell.com/support/home/us/en/19/product-support/servicetag/<>/warranty"}}

    Structure WarrantyInfo
        Dim target As String
        Dim start_date As String
        Dim end_date As String
        Dim raw_str As String

        Sub New(t As String, s As String, e As String, Optional raw As String = "")
            target = t
            start_date = s
            end_date = e
            raw_str = raw
        End Sub
    End Structure

    Enum Website
        Lenovo_CN
        Lenovo_US
        Dell_US
    End Enum
    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="sn"></param>
    ''' <param name="s"></param>
    ''' <param name="timeout">This is the initial timeout in seconds when waiting for the site to load first.</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Query(ByVal sn() As String, ByVal s As Website, ByVal timeout As Integer) As List(Of WarrantyInfo)
        'Dim tmpwin As New Form
        'tmpwin.Size = New Drawing.Size(500, 500)
        'tmpwin.Show()
        'tmpwin.WindowState = FormWindowState.Maximized
        Dim wb As New WebBrowser
        wb.Parent = Me
        wb.Dock = DockStyle.Fill

        Try
            wb.ScriptErrorsSuppressed = True
            If s = Website.Lenovo_CN Then
                wb.Navigate(SiteAddress(s.ToString))
                Dim ele = WaitForElement(wb, "MachineNo", timeout, True)
                'ele.SetAttribute("value", sn)
                ele.DomElement.nextSibling.nextSibling.click()
                Application.DoEvents()

                Dim info As New WarrantyInfo
                ele = WaitForElement(wb, "assemblyTimeStart", 10, False)
                info.start_date = ele.InnerText.Substring(0, 10)
                ele = WaitForElement(wb, "assemblyTimeEnd", 10, False)
                info.end_date = ele.InnerText.Substring(0, 10)

                Application.DoEvents()
                'Return info
            ElseIf s = Website.Lenovo_US Then
                Dim request = WebRequest.CreateHttp("http://support.lenovo.com/hk/zh/warrantylookup")
                'request.CookieContainer = New CookieContainer()
                'request.CookieContainer.Add(New Cookie("esupport#lang", "zh-HK", "/", "lenovo.com"))
                'request.GetResponse()
                'request.CookieContainer.GetCookies(New Uri("http://support.lenovo.com/hk/zh/warrantylookup"))("esupport#lang").Value = "zh_HK"
                Dim realhost, action As String
                Using response1 = request.GetResponse
                    realhost = response1.ResponseUri.Host
                    Dim rsphtml1 As New HtmlAgilityPack.HtmlDocument
                    rsphtml1.Load(response1.GetResponseStream)
                    Dim serialNumberForm = rsphtml1.GetElementbyId("serialNumberForm")
                    action = serialNumberForm.Attributes("action").Value
                End Using

                Dim infolist As New List(Of WarrantyInfo)
                For Each _sn In sn
                    Dim post = WebRequest.CreateHttp("http://" & realhost & action)
                    post.ContentType = "application/x-www-form-urlencoded; charset=UTF-8"
                    post.Method = "post"
                    Dim postdata = System.Text.Encoding.UTF8.GetBytes("SerialCode=" & _sn)
                    Dim rsphtml As New HtmlAgilityPack.HtmlDocument
                    Using datastream = post.GetRequestStream
                        datastream.Write(postdata, 0, postdata.Length)
                        rsphtml.Load(post.GetResponse().GetResponseStream)
                        'Using response2 = post.GetResponse()

                        'End Using
                    End Using
                    Try
                        Dim wrntynodes = rsphtml.GetElementbyId("warranty_result_div").SelectNodes("div")
                        infolist.Add(New WarrantyInfo(_sn, wrntynodes(0).InnerText.Split(":"c)(1).Trim, wrntynodes(1).InnerText.Split(":"c)(1).Trim))
                    Catch ex As Exception
                        infolist.Add(New WarrantyInfo(_sn, "", "", ex.Message))
                    End Try
                Next
                Return infolist

                'Dim post = WebRequest.CreateHttp("http://support.lenovo.com/services/hk/zh/warrantylookup/docapvalidation/60c6776d-f797-4ccb-88f7-f7e63abc4086?dataSource=057742d3-fe65-492c-8fa6-c4ddc5da5727")


                'Dim responsestr As String
                'Using reader As New IO.StreamReader(response2.GetResponseStream)
                '    responsestr = reader.ReadToEnd
                'End Using

                'wb.DocumentStream = response.GetResponseStream
                'Dim a = wb.Document.Forms(0)
                'wb.Navigate(SiteAddress(s.ToString))
                'WaitForElement(wb, "serialCode", timeout, True).SetAttribute("value", sn)
                'Application.DoEvents()
                'wb.Document.GetElementById("warrantySubmit").InvokeMember("Click")
                'Application.DoEvents()

                'Dim info As New WarrantyInfo
                'Dim wrntyformele = WaitForElement(wb, "warranty_result_div", 15, False)
                'info.start_date = wrntyformele.Children(0).InnerText.Split(vbCrLf)(1).Trim
                'info.end_date = wrntyformele.Children(1).InnerText.Split(vbCrLf)(1).Trim

                'For Each ele As HtmlElement In wrntyformele.All
                '    If ele.GetAttribute("className") = "cell2" Then

                '        If ele.InnerText.Contains("Start Date") Then
                '            info.start_date = ele.InnerText.Substring(ele.InnerText.IndexOf(":"c) + 1).Trim
                '        ElseIf ele.InnerText.Contains("End Date") Then
                '            info.end_date = ele.InnerText.Substring(ele.InnerText.IndexOf(":"c) + 1).Trim
                '        End If
                '    End If
                'Next
                'Application.DoEvents()
            ElseIf s = Website.Dell_US Then
                'wb.Navigate(SiteAddress(s.ToString).Replace("<>", sn))
                WaitForElement(wb, "hrefWarrantyID", timeout, False)
                Application.DoEvents() 'this is to wait for the page to load fully

                If Not IsNothing(wb.Document.GetElementById("RegistrationCaptcha_CaptchaImage")) Then
                    Using CaptchaPrompt As New Form
                        'this is from http://stackoverflow.com/questions/15736291/copy-image-from-webbrowser-to-clipboard
                        'for getting a copy of the captcha to clipboard
                        Dim doc As mshtml.IHTMLDocument2 = DirectCast(wb.Document.DomDocument, mshtml.IHTMLDocument2)
                        Dim body As mshtml.IHTMLElement2 = DirectCast(doc.body, mshtml.IHTMLElement2)
                        Dim imgRange As mshtml.IHTMLControlRange = DirectCast(body.createControlRange(), mshtml.IHTMLControlRange)
                        Dim image As mshtml.IHTMLControlElement = DirectCast(DirectCast(doc, mshtml.IHTMLDocument3).getElementById("RegistrationCaptcha_CaptchaImage"), mshtml.IHTMLControlElement)
                        imgRange.add(image)
                        imgRange.execCommand("Copy", False, Nothing)

                        With CaptchaPrompt
                            .Text = "Enter Captcha"
                            .Size = New Drawing.Size(300, 200)
                            .FormBorderStyle = Windows.Forms.FormBorderStyle.FixedToolWindow
                            .ControlBox = False
                            .ShowInTaskbar = False
                            '.Font = New Font("微软雅黑", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
                            '.Size = New Size(250, 150)
                            .StartPosition = FormStartPosition.CenterScreen
                        End With
                        Dim PB_Captcha As New PictureBox
                        With PB_Captcha
                            .Parent = CaptchaPrompt
                            .SizeMode = PictureBoxSizeMode.Zoom
                            .Size = New Drawing.Size(260, 90)
                            .Location = New Drawing.Point(12, 12)
                            .Image = Clipboard.GetImage
                            '.ImageLocation = wb.Document.GetElementById("RegistrationCaptcha_CaptchaImage").GetAttribute("src")
                        End With
                        Clipboard.Clear()
                        Dim TB_Captcha As New TextBox
                        With TB_Captcha
                            .Parent = CaptchaPrompt
                            .Location = New Drawing.Point(12, 114)
                            .Width = 260
                        End With
                        AddHandler TB_Captcha.KeyDown, Sub(sender As Object, e As KeyEventArgs)
                                                           If e.KeyCode = Keys.Enter Then
                                                               wb.Document.GetElementById("CaptchaCode").SetAttribute("value", TB_Captcha.Text)
                                                               wb.Document.GetElementById("btnSubmitCaptchawarranty").InvokeMember("Click")
                                                               CaptchaPrompt.DialogResult = Windows.Forms.DialogResult.OK
                                                           End If
                                                       End Sub
                        CaptchaPrompt.ShowDialog()
                    End Using
                End If
                'above is for the captcha

                Dim html = WaitForElement(wb, "printdivid", 10, False).InnerHtml
                html = html.Substring(html.IndexOf("<tbody>"))
                html = html.Remove(html.IndexOf("</tbody>") + 8)
                Dim xele = XElement.Parse(html)
                Dim tmpstr As String, startdate = Date.MaxValue, enddate = Date.MinValue
                For Each ele In xele.Elements
                    If ele.Elements().Count > 3 Then
                        Dim tmpdate = DateTime.Parse(ele.Elements()(2).Value.Trim)
                        If startdate > tmpdate Then startdate = tmpdate
                        tmpdate = DateTime.Parse(ele.Elements()(3).Value.Trim)
                        If enddate < tmpdate Then enddate = tmpdate

                        tmpstr += ele.Elements()(0).Value.Trim & vbCrLf & "     From " & ele.Elements()(2).Value.Trim & " To " & ele.Elements()(3).Value.Trim & vbCrLf
                    End If
                Next

                Application.DoEvents()
                'Return New WarrantyInfo(startdate.ToString("yyyy-MM-dd"), enddate.ToString("yyyy-MM-dd"), tmpstr)
            End If
        Catch ex As Exception
            'Return New WarrantyInfo("", "", ex.Message)
        Finally
            Application.DoEvents()
            'wb.Dispose()
        End Try

    End Function

    ''' <summary>
    ''' Wait for element to exist / have innertext. Otherwise throws exception.
    ''' </summary>
    ''' <param name="b"></param>
    ''' <param name="ele_id"></param>
    ''' <param name="seconds">Put zero here will cause an ArgumentException at runtime.</param>
    ''' <param name="accept_null">If the element's innertext might be nothing, specify true to skip checking innertext.</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function WaitForElement(b As WebBrowser, ele_id As String, seconds As Integer, accept_null As Boolean) As HtmlElement
        If seconds = 0 Then
            Throw New ArgumentException("Seconds cannot be zero.")
        End If
        For i = 1 To seconds
            If Not IsNothing(b.Document) Then
                Dim ele = b.Document.GetElementById(ele_id)
                If Not IsNothing(ele) Then
                    If accept_null Then
                        Return ele
                    Else
                        If Not IsNothing(ele.InnerText) Then
                            Return ele
                        Else
                            Threading.Thread.Sleep(1000)
                            Application.DoEvents()
                        End If
                    End If
                Else
                    Threading.Thread.Sleep(1000)
                    Application.DoEvents()
                End If
            Else
                Threading.Thread.Sleep(1000)
                Application.DoEvents()
            End If
        Next
        Throw New TimeoutException("Request timed out while waiting for " & ele_id & ". The timeout is " & seconds & " seconds.")
    End Function

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        Dim a = Query(TextBox1.Lines, Website.Lenovo_US, 25)
        Stop
    End Sub
End Class